import math
from itertools import combinations

# Буквы и их количество: 7 уникальных (Ч, Р, П, Л, И, Ц, А) и 3 повторяющихся (Е, С, О) ×2
unique = ['Ч', 'Р', 'П', 'Л', 'И', 'Ц', 'А']  # 7 букв
repeating = ['Е', 'С', 'О']  # 3 буквы (каждая встречается 2 раза)

# Случай 1: Все 4 буквы уникальны (включая повторяющиеся, но взятые по 1 разу)
# Выбираем 4 буквы из всех 10, но не более 1 экземпляра для повторяющихся
case1 = math.comb(10, 4) * math.factorial(4)  # C(10,4) * 4! = 210 * 24 = 5040

# Случай 2: Одна буква повторяется 2 раза + 2 уникальные
case2 = 0
for r in repeating:
    # Выбираем 2 уникальные из оставшихся 13 букв (10 уникальных + 3 повторяющиеся)
    # (исключаем выбранную повторяющуюся букву, так как она уже использована дважды)
    remaining = unique + [x for x in repeating if x != r]
    combinations_uniq = math.comb(len(remaining), 2)
    # Перестановки: 4! / 2! (учет двух одинаковых букв)
    permutations = math.factorial(4) // 2
    case2 += combinations_uniq * permutations
case2 *= 3  # Умножаем на 3 повторяющиеся буквы

# Случай 3: Две разные повторяющиеся буквы (каждая по 2 раза)
if 4 == 2 + 2:  # 2 пары
    # Выбираем 2 буквы из 3 повторяющихся
    comb_repeating = math.comb(3, 2)
    # Перестановки: 4! / (2! * 2!) = 6
    permutations = math.factorial(4) // (2 * 2)
    case3 = comb_repeating * permutations
else:
    case3 = 0  # Невозможно для 4 букв

# Случай 4: Одна повторяющаяся буква 2 раза + еще одна повторяющаяся 1 раз + 1 уникальная
# Не рассматриваем, так как это приведет к 2+1+1=4, но это уже учтено в других случаях

total = case1 + case2 + case3
print(f"Количество различных 4-буквенных слов: {total}")
